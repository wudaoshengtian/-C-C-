#!/bin/bash -eu
# Copyright 2016 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
################################################################################

# Test fuzzers and writes junit xml reports.

REPORT_DIR="/junit_reports"
mkdir -p $REPORT_DIR

N=0
TOTAL_FAILURES=0
for FUZZER_BINARY in $(find $OUT/ -executable -type f); do
  if file "$FUZZER_BINARY" | grep -v ELF > /dev/null 2>&1; then
    continue
  fi
  if [[ "$FUZZER" == afl-* ]]; then
    continue
  fi
  if [[ "$FUZZER" == honggfuzz ]]; then
    continue
  fi

  N=$[$N+1]
  echo "testing $FUZZER"

  # run fuzzer.
  FUZZER_STDOUT=$(tempfile)
  if [[ "$FUZZING_ENGINE" = honggfuzz ]]; then
    timeout --preserve-status -s INT 20s run_fuzzer $FUZZER 2>&1 |& tee $FUZZER_STDOUT
  elif [[ "$FUZZING_ENGINE" = libfuzzer ]]; then
    run_fuzzer $FUZZER -max_total_time=20 |& tee $FUZZER_STDOUT
  else
    export AFL_NO_UI=1
    timeout --preserve-status -s INT 20s run_fuzzer $FUZZER |& tee $FUZZER_STDOUT
  fi
  FUZZER_STATUS=${PIPESTATUS[0]}

  FAILURES=0
  FAILURE_TAG=""
  if [ "$FUZZER_STATUS" -ne "0" ]; then
    echo "ERROR: bad exit code: $FUZZER_STATUS"
    FAILURES=1
    FAILURE_TAG="<failure message=\"Fuzzer failed\">$FUZZER_STATUS</failure>"
    TOTAL_FAILURES=$[$TOTAL_FAILURES+1]
  fi

  # generate report.
  TIMESTAMP=$(date --iso-8601=seconds)
  HOSTNAME=$(hostname)
  TESTNAME="${TEST_SUITE:-}$FUZZER"

  OUT_TXT=$(cat $FUZZER_STDOUT)
  
  # Escape non-printable characters and CDATA end sequence.
  OUT_TXT=${OUT_TXT//[^[:print:]]/?}
  OUT_TXT=${OUT_TXT//]]>/?}

  REPORT_TEXT=$(cat <<-EOF
<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="$TESTNAME" tests="1" skipped="0" failures="$FAILURES" errors="0" timestamp="$TIMESTAMP" hostname="$HOSTNAME" time="1">
  <properties/>
  <testcase name="$TESTNAME" classname="$TESTNAME" time="1">${FAILURE_TAG}</testcase>
  <system-out><![CDATA[${OUT_TXT}]]></system-out>
  <system-err></system-err>
</testsuite>
EOF
)
  echo "$REPORT_TEXT" > /junit_reports/$FUZZER.xml
done

if [ "$N" -eq "0" ]; then
  echo "ERROR: no fuzzers found in $OUT/"
  ls -al $OUT
  exit 1
fi

echo "$N fuzzers total ($TOTAL_FAILURES failed)."

